<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="4" total="5" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="10227" started-at="2021-12-09T21:25:14 ART" finished-at="2021-12-09T21:25:24 ART">
    <groups>
    </groups>
    <test name="Default test" duration-ms="10227" started-at="2021-12-09T21:25:14 ART" finished-at="2021-12-09T21:25:24 ART">
      <class name="Netflix.Netflixtest.NetflixTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Netflix.Netflixtest.NetflixTest@27808f31]" name="setUp" is-config="true" duration-ms="3626" started-at="2021-12-09T21:25:10 ART" finished-at="2021-12-09T21:25:14 ART">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="irURl()[pri:0, instance:Netflix.Netflixtest.NetflixTest@27808f31]" name="irURl" is-config="true" duration-ms="3267" started-at="2021-12-09T21:25:14 ART" finished-at="2021-12-09T21:25:17 ART">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- irURl -->
        <test-method status="PASS" signature="maxVentana()[pri:0, instance:Netflix.Netflixtest.NetflixTest@27808f31]" name="maxVentana" is-config="true" duration-ms="296" started-at="2021-12-09T21:25:17 ART" finished-at="2021-12-09T21:25:17 ART">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxVentana -->
        <test-method status="FAIL" signature="fakeEmailTest()[pri:1, instance:Netflix.Netflixtest.NetflixTest@27808f31]" name="fakeEmailTest" duration-ms="6443" started-at="2021-12-09T21:25:17 ART" finished-at="2021-12-09T21:25:24 ART">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Netflix.Netflixtest.NetflixTest.fakeEmailTest(NetflixTest.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fakeEmailTest -->
        <test-method status="PASS" signature="closed()[pri:0, instance:Netflix.Netflixtest.NetflixTest@27808f31]" name="closed" is-config="true" duration-ms="189" started-at="2021-12-09T21:25:24 ART" finished-at="2021-12-09T21:25:24 ART">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closed -->
      </class> <!-- Netflix.Netflixtest.NetflixTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
